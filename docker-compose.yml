version: '3.0'

services:

  sql_demo:
    container_name: mysql #容器名称
    image: daocloud.io/library/mysql:8.0.20 # 使用官方镜像
    # command: redis-server --appendonly yes # 开启redis数据持久化
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306 # 本机端口:容器端口
    restart: on-failure
    environment:
      MYSQL_DATABASE: demo-db
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345678
    #   MYSQL_ROOT_HOST: '%'
    # volumes:
    #   - ./deploy/mysql/db:/var/lib/mysql # 用来存放了数据库表文件
    #   - ./deploy/mysql/conf/my.cnf:/etc/my.cnf # 存放自定义的配置文件
    #   # 我们在启动MySQL容器时自动创建我们需要的数据库和表
    #   # mysql官方镜像中提供了容器启动时自动docker-entrypoint-initdb.d下的脚本的功能
    #   - ./deploy/mysql/init:/docker-entrypoint-initdb.d/ # 存放初始化的脚本
    networks:
      - my-server_demo

  server_demo: # nestjs服务
    container_name: server_demo
    build: # 根据Dockerfile构建镜像
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: on-failure # 设置自动重启，这一步必须设置，主要是存在mysql还没有启动完成就启动了node服务
    networks:
      - my-server_demo
    depends_on: # node服务依赖于mysql
      - sql_demo

networks:
  my-server_demo:
